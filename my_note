3.pro3
	(1).description
		输入链表，返回vector，反转链表
	(2).solution
	(3).code
		a.使用迭代器遍历vector
			for(std::vector<int> it = v.begin(); it != v.end(); ++it){
				std::cout << *it << std::endl; //注意指针
			}
		b.倒置vector
			利用reverse函数，头文件<algorithm>, reverse(v.begin(), v.end())
4.pro4
	(1).description
		根据前序和中序遍历构建二叉树
	(2).solution
		递归
	(3).code
5.pro5
	(1).description
		用两个栈实现队列
	(2).solution
	(3).code
		a.栈的操作
			stack.top()	获取栈顶元素
			stack.push(ele)	入栈
			stack.pop()	出栈
			stack.empty() 判断栈是否为空
6.pro6
	(1).description
		找出旋转数组的最小元素
	(2).solution
		可利用二分优化
	(3).code
